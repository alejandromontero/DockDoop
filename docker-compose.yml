version: '3'
services:
  namenodehost:
    image: hadoop
    hostname: namenodehost
    volumes:
      - ./hadoop/hadoop_volume:/hadoop_volume/
    deploy:
      placement:
        constraints: [node.role == manager]
      replicas: 1
      restart_policy:
        condition: on-failure
    entrypoint: ["/opt/hadoop/bootstrap.sh", "namenode"]
    depends_on:
        - datanode
    networks:
      - hadoop_net

  resourcemanagerhost:
    image: hadoop
    hostname: resourcemanagerhost
    volumes:
      - ./hadoop/hadoop_volume:/hadoop_volume/
    deploy:
      placement:
        constraints: [node.role == manager]
      replicas: 1
      restart_policy:
        condition: on-failure
    entrypoint: ["/opt/hadoop/bootstrap.sh", "yarn"]
    depends_on:
        - datanode
    networks:
      - hadoop_net

  datanode:
    image: hadoop
    volumes:
      - ./hadoop/hadoop_volume:/hadoop_volume/
    deploy:
      mode: global
      placement:
        constraints: [node.role != manager]
      restart_policy:
        condition: on-failure
    entrypoint: ["/opt/hadoop/bootstrap.sh", "datanode"]
    networks:
      - hadoop_net

  application:
    image: application
    volumes:
      - ./application/app_volume:/app/app_volume
    deploy:
     placement:
       constraints: [node.role == manager]
    networks:
      - hadoop_net
networks:
  hadoop_net:
